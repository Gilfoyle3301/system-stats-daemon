// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: api/pb/metrics.proto

package collectorpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MetricsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NSecond int32 `protobuf:"varint,1,opt,name=n_second,json=nSecond,proto3" json:"n_second,omitempty"`
	MSecond int32 `protobuf:"varint,2,opt,name=m_second,json=mSecond,proto3" json:"m_second,omitempty"`
}

func (x *MetricsRequest) Reset() {
	*x = MetricsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pb_metrics_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetricsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricsRequest) ProtoMessage() {}

func (x *MetricsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_pb_metrics_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricsRequest.ProtoReflect.Descriptor instead.
func (*MetricsRequest) Descriptor() ([]byte, []int) {
	return file_api_pb_metrics_proto_rawDescGZIP(), []int{0}
}

func (x *MetricsRequest) GetNSecond() int32 {
	if x != nil {
		return x.NSecond
	}
	return 0
}

func (x *MetricsRequest) GetMSecond() int32 {
	if x != nil {
		return x.MSecond
	}
	return 0
}

type MetricsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Collector *Collector `protobuf:"bytes,1,opt,name=collector,proto3" json:"collector,omitempty"`
}

func (x *MetricsResponse) Reset() {
	*x = MetricsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pb_metrics_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetricsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricsResponse) ProtoMessage() {}

func (x *MetricsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_pb_metrics_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricsResponse.ProtoReflect.Descriptor instead.
func (*MetricsResponse) Descriptor() ([]byte, []int) {
	return file_api_pb_metrics_proto_rawDescGZIP(), []int{1}
}

func (x *MetricsResponse) GetCollector() *Collector {
	if x != nil {
		return x.Collector
	}
	return nil
}

type LoadAverage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OneMinute      float64 `protobuf:"fixed64,1,opt,name=one_minute,json=oneMinute,proto3" json:"one_minute,omitempty"`
	FiveMinutes    float64 `protobuf:"fixed64,2,opt,name=five_minutes,json=fiveMinutes,proto3" json:"five_minutes,omitempty"`
	FifteenMinutes float64 `protobuf:"fixed64,3,opt,name=fifteen_minutes,json=fifteenMinutes,proto3" json:"fifteen_minutes,omitempty"`
}

func (x *LoadAverage) Reset() {
	*x = LoadAverage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pb_metrics_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoadAverage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadAverage) ProtoMessage() {}

func (x *LoadAverage) ProtoReflect() protoreflect.Message {
	mi := &file_api_pb_metrics_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadAverage.ProtoReflect.Descriptor instead.
func (*LoadAverage) Descriptor() ([]byte, []int) {
	return file_api_pb_metrics_proto_rawDescGZIP(), []int{2}
}

func (x *LoadAverage) GetOneMinute() float64 {
	if x != nil {
		return x.OneMinute
	}
	return 0
}

func (x *LoadAverage) GetFiveMinutes() float64 {
	if x != nil {
		return x.FiveMinutes
	}
	return 0
}

func (x *LoadAverage) GetFifteenMinutes() float64 {
	if x != nil {
		return x.FifteenMinutes
	}
	return 0
}

type CPUUsage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserMode   float64 `protobuf:"fixed64,1,opt,name=user_mode,json=userMode,proto3" json:"user_mode,omitempty"`
	SystemMode float64 `protobuf:"fixed64,2,opt,name=system_mode,json=systemMode,proto3" json:"system_mode,omitempty"`
	Idle       float64 `protobuf:"fixed64,3,opt,name=idle,proto3" json:"idle,omitempty"`
}

func (x *CPUUsage) Reset() {
	*x = CPUUsage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pb_metrics_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPUUsage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPUUsage) ProtoMessage() {}

func (x *CPUUsage) ProtoReflect() protoreflect.Message {
	mi := &file_api_pb_metrics_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPUUsage.ProtoReflect.Descriptor instead.
func (*CPUUsage) Descriptor() ([]byte, []int) {
	return file_api_pb_metrics_proto_rawDescGZIP(), []int{3}
}

func (x *CPUUsage) GetUserMode() float64 {
	if x != nil {
		return x.UserMode
	}
	return 0
}

func (x *CPUUsage) GetSystemMode() float64 {
	if x != nil {
		return x.SystemMode
	}
	return 0
}

func (x *CPUUsage) GetIdle() float64 {
	if x != nil {
		return x.Idle
	}
	return 0
}

type DiskUsage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Tps      float64 `protobuf:"fixed64,2,opt,name=tps,proto3" json:"tps,omitempty"`
	Kbpersec float64 `protobuf:"fixed64,3,opt,name=kbpersec,proto3" json:"kbpersec,omitempty"`
}

func (x *DiskUsage) Reset() {
	*x = DiskUsage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pb_metrics_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiskUsage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiskUsage) ProtoMessage() {}

func (x *DiskUsage) ProtoReflect() protoreflect.Message {
	mi := &file_api_pb_metrics_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiskUsage.ProtoReflect.Descriptor instead.
func (*DiskUsage) Descriptor() ([]byte, []int) {
	return file_api_pb_metrics_proto_rawDescGZIP(), []int{4}
}

func (x *DiskUsage) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DiskUsage) GetTps() float64 {
	if x != nil {
		return x.Tps
	}
	return 0
}

func (x *DiskUsage) GetKbpersec() float64 {
	if x != nil {
		return x.Kbpersec
	}
	return 0
}

type FileSystemUsage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileSystem   string  `protobuf:"bytes,1,opt,name=file_system,json=fileSystem,proto3" json:"file_system,omitempty"`
	Usedmb       float64 `protobuf:"fixed64,2,opt,name=usedmb,proto3" json:"usedmb,omitempty"`
	UsedPercent  float64 `protobuf:"fixed64,3,opt,name=used_percent,json=usedPercent,proto3" json:"used_percent,omitempty"`
	UsedInode    float64 `protobuf:"fixed64,4,opt,name=used_inode,json=usedInode,proto3" json:"used_inode,omitempty"`
	InodePercent float64 `protobuf:"fixed64,5,opt,name=inode_percent,json=inodePercent,proto3" json:"inode_percent,omitempty"`
}

func (x *FileSystemUsage) Reset() {
	*x = FileSystemUsage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pb_metrics_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileSystemUsage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileSystemUsage) ProtoMessage() {}

func (x *FileSystemUsage) ProtoReflect() protoreflect.Message {
	mi := &file_api_pb_metrics_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileSystemUsage.ProtoReflect.Descriptor instead.
func (*FileSystemUsage) Descriptor() ([]byte, []int) {
	return file_api_pb_metrics_proto_rawDescGZIP(), []int{5}
}

func (x *FileSystemUsage) GetFileSystem() string {
	if x != nil {
		return x.FileSystem
	}
	return ""
}

func (x *FileSystemUsage) GetUsedmb() float64 {
	if x != nil {
		return x.Usedmb
	}
	return 0
}

func (x *FileSystemUsage) GetUsedPercent() float64 {
	if x != nil {
		return x.UsedPercent
	}
	return 0
}

func (x *FileSystemUsage) GetUsedInode() float64 {
	if x != nil {
		return x.UsedInode
	}
	return 0
}

func (x *FileSystemUsage) GetInodePercent() float64 {
	if x != nil {
		return x.InodePercent
	}
	return 0
}

type NetworkProtocol struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Protocol string  `protobuf:"bytes,1,opt,name=protocol,proto3" json:"protocol,omitempty"`
	Bytes    int64   `protobuf:"varint,2,opt,name=bytes,proto3" json:"bytes,omitempty"`
	Percent  float64 `protobuf:"fixed64,3,opt,name=percent,proto3" json:"percent,omitempty"`
}

func (x *NetworkProtocol) Reset() {
	*x = NetworkProtocol{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pb_metrics_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkProtocol) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkProtocol) ProtoMessage() {}

func (x *NetworkProtocol) ProtoReflect() protoreflect.Message {
	mi := &file_api_pb_metrics_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkProtocol.ProtoReflect.Descriptor instead.
func (*NetworkProtocol) Descriptor() ([]byte, []int) {
	return file_api_pb_metrics_proto_rawDescGZIP(), []int{6}
}

func (x *NetworkProtocol) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *NetworkProtocol) GetBytes() int64 {
	if x != nil {
		return x.Bytes
	}
	return 0
}

func (x *NetworkProtocol) GetPercent() float64 {
	if x != nil {
		return x.Percent
	}
	return 0
}

type TrafficInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sourceip   string  `protobuf:"bytes,1,opt,name=sourceip,proto3" json:"sourceip,omitempty"`
	SourcePort int64   `protobuf:"varint,2,opt,name=source_port,json=sourcePort,proto3" json:"source_port,omitempty"`
	Destip     string  `protobuf:"bytes,3,opt,name=destip,proto3" json:"destip,omitempty"`
	DestPort   int64   `protobuf:"varint,4,opt,name=dest_port,json=destPort,proto3" json:"dest_port,omitempty"`
	Protocol   string  `protobuf:"bytes,5,opt,name=protocol,proto3" json:"protocol,omitempty"`
	Bps        float64 `protobuf:"fixed64,6,opt,name=bps,proto3" json:"bps,omitempty"`
	Bytes      int64   `protobuf:"varint,7,opt,name=Bytes,proto3" json:"Bytes,omitempty"`
	State      string  `protobuf:"bytes,8,opt,name=State,proto3" json:"State,omitempty"`
}

func (x *TrafficInfo) Reset() {
	*x = TrafficInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pb_metrics_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrafficInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrafficInfo) ProtoMessage() {}

func (x *TrafficInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_pb_metrics_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrafficInfo.ProtoReflect.Descriptor instead.
func (*TrafficInfo) Descriptor() ([]byte, []int) {
	return file_api_pb_metrics_proto_rawDescGZIP(), []int{7}
}

func (x *TrafficInfo) GetSourceip() string {
	if x != nil {
		return x.Sourceip
	}
	return ""
}

func (x *TrafficInfo) GetSourcePort() int64 {
	if x != nil {
		return x.SourcePort
	}
	return 0
}

func (x *TrafficInfo) GetDestip() string {
	if x != nil {
		return x.Destip
	}
	return ""
}

func (x *TrafficInfo) GetDestPort() int64 {
	if x != nil {
		return x.DestPort
	}
	return 0
}

func (x *TrafficInfo) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *TrafficInfo) GetBps() float64 {
	if x != nil {
		return x.Bps
	}
	return 0
}

func (x *TrafficInfo) GetBytes() int64 {
	if x != nil {
		return x.Bytes
	}
	return 0
}

func (x *TrafficInfo) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

type ListeningSocket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Command  string `protobuf:"bytes,1,opt,name=command,proto3" json:"command,omitempty"`
	Pid      int64  `protobuf:"varint,2,opt,name=pid,proto3" json:"pid,omitempty"`
	User     string `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
	Protocol string `protobuf:"bytes,4,opt,name=protocol,proto3" json:"protocol,omitempty"`
	Port     int64  `protobuf:"varint,5,opt,name=port,proto3" json:"port,omitempty"`
}

func (x *ListeningSocket) Reset() {
	*x = ListeningSocket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pb_metrics_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListeningSocket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListeningSocket) ProtoMessage() {}

func (x *ListeningSocket) ProtoReflect() protoreflect.Message {
	mi := &file_api_pb_metrics_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListeningSocket.ProtoReflect.Descriptor instead.
func (*ListeningSocket) Descriptor() ([]byte, []int) {
	return file_api_pb_metrics_proto_rawDescGZIP(), []int{8}
}

func (x *ListeningSocket) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

func (x *ListeningSocket) GetPid() int64 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *ListeningSocket) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *ListeningSocket) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *ListeningSocket) GetPort() int64 {
	if x != nil {
		return x.Port
	}
	return 0
}

type TCPStates struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State string `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
	Count int64  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *TCPStates) Reset() {
	*x = TCPStates{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pb_metrics_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TCPStates) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TCPStates) ProtoMessage() {}

func (x *TCPStates) ProtoReflect() protoreflect.Message {
	mi := &file_api_pb_metrics_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TCPStates.ProtoReflect.Descriptor instead.
func (*TCPStates) Descriptor() ([]byte, []int) {
	return file_api_pb_metrics_proto_rawDescGZIP(), []int{9}
}

func (x *TCPStates) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *TCPStates) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type Collector struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Loadaverage     *LoadAverage       `protobuf:"bytes,1,opt,name=loadaverage,proto3" json:"loadaverage,omitempty"`
	Cpuusage        *CPUUsage          `protobuf:"bytes,2,opt,name=cpuusage,proto3" json:"cpuusage,omitempty"`
	Diskusage       []*DiskUsage       `protobuf:"bytes,3,rep,name=diskusage,proto3" json:"diskusage,omitempty"`
	Filesystemusage []*FileSystemUsage `protobuf:"bytes,4,rep,name=filesystemusage,proto3" json:"filesystemusage,omitempty"`
	Networkprotocol []*NetworkProtocol `protobuf:"bytes,5,rep,name=networkprotocol,proto3" json:"networkprotocol,omitempty"`
	Trafficinfo     []*TrafficInfo     `protobuf:"bytes,6,rep,name=trafficinfo,proto3" json:"trafficinfo,omitempty"`
	Tcpstates       []*TCPStates       `protobuf:"bytes,7,rep,name=tcpstates,proto3" json:"tcpstates,omitempty"`
	Listeningsocket []*ListeningSocket `protobuf:"bytes,8,rep,name=listeningsocket,proto3" json:"listeningsocket,omitempty"`
}

func (x *Collector) Reset() {
	*x = Collector{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pb_metrics_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Collector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Collector) ProtoMessage() {}

func (x *Collector) ProtoReflect() protoreflect.Message {
	mi := &file_api_pb_metrics_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Collector.ProtoReflect.Descriptor instead.
func (*Collector) Descriptor() ([]byte, []int) {
	return file_api_pb_metrics_proto_rawDescGZIP(), []int{10}
}

func (x *Collector) GetLoadaverage() *LoadAverage {
	if x != nil {
		return x.Loadaverage
	}
	return nil
}

func (x *Collector) GetCpuusage() *CPUUsage {
	if x != nil {
		return x.Cpuusage
	}
	return nil
}

func (x *Collector) GetDiskusage() []*DiskUsage {
	if x != nil {
		return x.Diskusage
	}
	return nil
}

func (x *Collector) GetFilesystemusage() []*FileSystemUsage {
	if x != nil {
		return x.Filesystemusage
	}
	return nil
}

func (x *Collector) GetNetworkprotocol() []*NetworkProtocol {
	if x != nil {
		return x.Networkprotocol
	}
	return nil
}

func (x *Collector) GetTrafficinfo() []*TrafficInfo {
	if x != nil {
		return x.Trafficinfo
	}
	return nil
}

func (x *Collector) GetTcpstates() []*TCPStates {
	if x != nil {
		return x.Tcpstates
	}
	return nil
}

func (x *Collector) GetListeningsocket() []*ListeningSocket {
	if x != nil {
		return x.Listeningsocket
	}
	return nil
}

var File_api_pb_metrics_proto protoreflect.FileDescriptor

var file_api_pb_metrics_proto_rawDesc = []byte{
	0x0a, 0x14, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x62, 0x2f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x22, 0x46, 0x0a, 0x0e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6e, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x12, 0x19,
	0x0a, 0x08, 0x6d, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x6d, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x22, 0x45, 0x0a, 0x0f, 0x4d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x09,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x09, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x22, 0x78, 0x0a, 0x0b, 0x4c, 0x6f, 0x61, 0x64, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x6f, 0x6e, 0x65, 0x5f, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x09, 0x6f, 0x6e, 0x65, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x66, 0x69, 0x76, 0x65, 0x5f, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x66, 0x69, 0x76, 0x65, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65,
	0x73, 0x12, 0x27, 0x0a, 0x0f, 0x66, 0x69, 0x66, 0x74, 0x65, 0x65, 0x6e, 0x5f, 0x6d, 0x69, 0x6e,
	0x75, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0e, 0x66, 0x69, 0x66, 0x74,
	0x65, 0x65, 0x6e, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x22, 0x5c, 0x0a, 0x08, 0x43, 0x50,
	0x55, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6d,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4d,
	0x6f, 0x64, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x6d, 0x6f,
	0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x4d, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x64, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x04, 0x69, 0x64, 0x6c, 0x65, 0x22, 0x4d, 0x0a, 0x09, 0x44, 0x69, 0x73, 0x6b,
	0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x70, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x74, 0x70, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6b,
	0x62, 0x70, 0x65, 0x72, 0x73, 0x65, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6b,
	0x62, 0x70, 0x65, 0x72, 0x73, 0x65, 0x63, 0x22, 0xb1, 0x01, 0x0a, 0x0f, 0x46, 0x69, 0x6c, 0x65,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x66,
	0x69, 0x6c, 0x65, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x16, 0x0a, 0x06,
	0x75, 0x73, 0x65, 0x64, 0x6d, 0x62, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x64, 0x6d, 0x62, 0x12, 0x21, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x64, 0x5f, 0x70, 0x65, 0x72,
	0x63, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x64,
	0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x64, 0x5f,
	0x69, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x75, 0x73, 0x65,
	0x64, 0x49, 0x6e, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x5f,
	0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x69,
	0x6e, 0x6f, 0x64, 0x65, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x22, 0x5d, 0x0a, 0x0f, 0x4e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x79,
	0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x07, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x22, 0xd9, 0x01, 0x0a, 0x0b, 0x54,
	0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x69, 0x70, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x73, 0x74, 0x69,
	0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x73, 0x74, 0x69, 0x70, 0x12,
	0x1b, 0x0a, 0x09, 0x64, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x64, 0x65, 0x73, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x62, 0x70, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x62, 0x70, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x42, 0x79,
	0x74, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x42, 0x79, 0x74, 0x65, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x81, 0x01, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x65,
	0x6e, 0x69, 0x6e, 0x67, 0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x03, 0x70, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x37, 0x0a, 0x09, 0x54, 0x43,
	0x50, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0xea, 0x03, 0x0a, 0x09, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x12, 0x38, 0x0a, 0x0b, 0x6c, 0x6f, 0x61, 0x64, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x52, 0x0b,
	0x6c, 0x6f, 0x61, 0x64, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x12, 0x2f, 0x0a, 0x08, 0x63,
	0x70, 0x75, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x43, 0x50, 0x55, 0x55, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x08, 0x63, 0x70, 0x75, 0x75, 0x73, 0x61, 0x67, 0x65, 0x12, 0x32, 0x0a, 0x09,
	0x64, 0x69, 0x73, 0x6b, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x44, 0x69, 0x73, 0x6b,
	0x55, 0x73, 0x61, 0x67, 0x65, 0x52, 0x09, 0x64, 0x69, 0x73, 0x6b, 0x75, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x44, 0x0a, 0x0f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x75, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x55, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x75, 0x73, 0x61, 0x67, 0x65, 0x12, 0x44, 0x0a, 0x0f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x4e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x52, 0x0f, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x38, 0x0a, 0x0b,
	0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x54, 0x72,
	0x61, 0x66, 0x66, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x66, 0x66,
	0x69, 0x63, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x32, 0x0a, 0x09, 0x74, 0x63, 0x70, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x54, 0x43, 0x50, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x52,
	0x09, 0x74, 0x63, 0x70, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x12, 0x44, 0x0a, 0x0f, 0x6c, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x08, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x52,
	0x0f, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74,
	0x32, 0x5d, 0x0a, 0x10, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x12, 0x49, 0x0a, 0x0e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x4d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x19, 0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1a, 0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x4d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x42,
	0x10, 0x5a, 0x0e, 0x2e, 0x2f, 0x3b, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x70,
	0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_pb_metrics_proto_rawDescOnce sync.Once
	file_api_pb_metrics_proto_rawDescData = file_api_pb_metrics_proto_rawDesc
)

func file_api_pb_metrics_proto_rawDescGZIP() []byte {
	file_api_pb_metrics_proto_rawDescOnce.Do(func() {
		file_api_pb_metrics_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_pb_metrics_proto_rawDescData)
	})
	return file_api_pb_metrics_proto_rawDescData
}

var file_api_pb_metrics_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_api_pb_metrics_proto_goTypes = []interface{}{
	(*MetricsRequest)(nil),  // 0: collector.MetricsRequest
	(*MetricsResponse)(nil), // 1: collector.MetricsResponse
	(*LoadAverage)(nil),     // 2: collector.LoadAverage
	(*CPUUsage)(nil),        // 3: collector.CPUUsage
	(*DiskUsage)(nil),       // 4: collector.DiskUsage
	(*FileSystemUsage)(nil), // 5: collector.FileSystemUsage
	(*NetworkProtocol)(nil), // 6: collector.NetworkProtocol
	(*TrafficInfo)(nil),     // 7: collector.TrafficInfo
	(*ListeningSocket)(nil), // 8: collector.ListeningSocket
	(*TCPStates)(nil),       // 9: collector.TCPStates
	(*Collector)(nil),       // 10: collector.Collector
}
var file_api_pb_metrics_proto_depIdxs = []int32{
	10, // 0: collector.MetricsResponse.collector:type_name -> collector.Collector
	2,  // 1: collector.Collector.loadaverage:type_name -> collector.LoadAverage
	3,  // 2: collector.Collector.cpuusage:type_name -> collector.CPUUsage
	4,  // 3: collector.Collector.diskusage:type_name -> collector.DiskUsage
	5,  // 4: collector.Collector.filesystemusage:type_name -> collector.FileSystemUsage
	6,  // 5: collector.Collector.networkprotocol:type_name -> collector.NetworkProtocol
	7,  // 6: collector.Collector.trafficinfo:type_name -> collector.TrafficInfo
	9,  // 7: collector.Collector.tcpstates:type_name -> collector.TCPStates
	8,  // 8: collector.Collector.listeningsocket:type_name -> collector.ListeningSocket
	0,  // 9: collector.MetricsCollector.CollectMetrics:input_type -> collector.MetricsRequest
	1,  // 10: collector.MetricsCollector.CollectMetrics:output_type -> collector.MetricsResponse
	10, // [10:11] is the sub-list for method output_type
	9,  // [9:10] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_api_pb_metrics_proto_init() }
func file_api_pb_metrics_proto_init() {
	if File_api_pb_metrics_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_pb_metrics_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetricsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pb_metrics_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetricsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pb_metrics_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoadAverage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pb_metrics_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CPUUsage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pb_metrics_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiskUsage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pb_metrics_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileSystemUsage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pb_metrics_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetworkProtocol); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pb_metrics_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrafficInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pb_metrics_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListeningSocket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pb_metrics_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TCPStates); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pb_metrics_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Collector); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_pb_metrics_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_pb_metrics_proto_goTypes,
		DependencyIndexes: file_api_pb_metrics_proto_depIdxs,
		MessageInfos:      file_api_pb_metrics_proto_msgTypes,
	}.Build()
	File_api_pb_metrics_proto = out.File
	file_api_pb_metrics_proto_rawDesc = nil
	file_api_pb_metrics_proto_goTypes = nil
	file_api_pb_metrics_proto_depIdxs = nil
}
